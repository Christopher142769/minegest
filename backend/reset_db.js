const mongoose = require('mongoose');

// Assurez-vous que cette ligne est correcte pour votre connexion
mongoose.connect('mongodb://localhost/truckers', {
  useNewUrlParser: true,
  useUnifiedTopology: true,
});

const db = mongoose.connection;

db.on('error', console.error.bind(console, '‚ùå Erreur de connexion MongoDB:'));
db.once('open', async () => {
  console.log('‚úÖ Connexion √† la base de donn√©es r√©ussie.');

  try {
    // R√©cup√©rer toutes les collections existantes dans la base de donn√©es
    const collections = await db.db.listCollections().toArray();
    
    // Si des collections existent, les vider une par une
    if (collections.length > 0) {
      console.log('‚è≥ Vidage des collections...');
      for (const collection of collections) {
        // Supprimer tous les documents de la collection
        await db.collection(collection.name).deleteMany({});
        console.log(`‚úÖ Collection '${collection.name}' vid√©e avec succ√®s.`);
      }
    } else {
      console.log('‚ÑπÔ∏è Aucune collection √† vider.');
    }

    console.log('‚ú® Base de donn√©es r√©initialis√©e. Toutes les donn√©es ont √©t√© supprim√©es.');
  } catch (err) {
    console.error('‚ùå Erreur lors de la r√©initialisation de la base de donn√©es:', err);
  } finally {
    // Fermer la connexion une fois l'op√©ration termin√©e
    mongoose.connection.close();
    console.log('üëã Connexion ferm√©e.');
  }
});